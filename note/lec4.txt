Hign-Oreder Functions

-------
 The Fibonacci Sequence :
	def fib(n):
		pred , curr=0,1;
		k=1
		while k<n :
			pred,curr = curr,pred+curr
			k=k+1
		return curr

---------
define a funciton that return a function 
	def make_adder(n):
		def adder(k):
			return k+n
		return adder

--------	
lambda function
	example:
		square = lambda x: x*x

---------
def search(f):
	x=0
	while not f(x)
		x+=1
	return x 
	

def inverse (f) :
	return lambda y: search(lanbda x: f(x) == y)

-----------

def if_( c,t,f ) :
	if c:
		return t
	else :
		return f

form math import sqrt

def real_sqrt (x):
 	return if(x>0,sqrt(x),0,0)


-----------


Logical Operators

 	<left> and <right>
	<left> or    <right>

-----------

Conditional Expressions

	<consequent> if <predicate> else <alternative>

#1 if <predicate> is true , the whole expression is its value
#2 if <predicate> is false ,the whole expression is the value of <alternative>









